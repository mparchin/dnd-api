// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(Db))]
    partial class DbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("ClassSpell", b =>
                {
                    b.Property<int>("RestrictedClassesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RestrictedSpellsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RestrictedClassesId", "RestrictedSpellsId");

                    b.HasIndex("RestrictedSpellsId");

                    b.ToTable("ClassSpell");
                });

            modelBuilder.Entity("ConditionSpell", b =>
                {
                    b.Property<int>("RelatedConditionsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RelatedSpellsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RelatedConditionsId", "RelatedSpellsId");

                    b.HasIndex("RelatedSpellsId");

                    b.ToTable("ConditionSpell");
                });

            modelBuilder.Entity("SpellSpellTag", b =>
                {
                    b.Property<int>("SpellTagsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SpellsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SpellTagsId", "SpellsId");

                    b.HasIndex("SpellsId");

                    b.ToTable("SpellSpellTag");
                });

            modelBuilder.Entity("api.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("api.Models.Condition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Conditions");
                });

            modelBuilder.Entity("api.Models.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("api.Models.Spell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Action")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Book")
                        .HasColumnType("TEXT");

                    b.Property<string>("DamageFormula")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DamageType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasSomaticComponent")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasVerbalComponent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HigherLevelDescription")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsConcentration")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRitual")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LongerAction")
                        .HasColumnType("TEXT");

                    b.Property<string>("Materials")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Range")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("SavingThrow")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SpellList")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("Spells");
                });

            modelBuilder.Entity("api.Models.SpellTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SpellTags");
                });

            modelBuilder.Entity("ClassSpell", b =>
                {
                    b.HasOne("api.Models.Class", null)
                        .WithMany()
                        .HasForeignKey("RestrictedClassesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Spell", null)
                        .WithMany()
                        .HasForeignKey("RestrictedSpellsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConditionSpell", b =>
                {
                    b.HasOne("api.Models.Condition", null)
                        .WithMany()
                        .HasForeignKey("RelatedConditionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Spell", null)
                        .WithMany()
                        .HasForeignKey("RelatedSpellsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpellSpellTag", b =>
                {
                    b.HasOne("api.Models.SpellTag", null)
                        .WithMany()
                        .HasForeignKey("SpellTagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Spell", null)
                        .WithMany()
                        .HasForeignKey("SpellsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api.Models.Spell", b =>
                {
                    b.HasOne("api.Models.School", "School")
                        .WithMany("Spells")
                        .HasForeignKey("SchoolId");

                    b.Navigation("School");
                });

            modelBuilder.Entity("api.Models.School", b =>
                {
                    b.Navigation("Spells");
                });
#pragma warning restore 612, 618
        }
    }
}
